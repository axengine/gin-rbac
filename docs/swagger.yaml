basePath: /
definitions:
  ginutil.BaseResp:
    properties:
      code:
        type: integer
      message:
        type: string
      traceId:
        type: string
    type: object
  model.Action:
    properties:
      appId:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      path:
        type: string
      status:
        type: integer
    type: object
  model.ActionBase:
    properties:
      appId:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      path:
        type: string
    type: object
  model.CreateAccountReq:
    properties:
      appId:
        type: string
      nickname:
        type: string
      pwd:
        type: string
      username:
        type: string
    required:
    - appId
    - nickname
    - pwd
    - username
    type: object
  model.CreateAppConfigReq:
    properties:
      memo:
        type: string
      name:
        type: string
    required:
    - memo
    - name
    type: object
  model.CreateMenuConfigReq:
    properties:
      appId:
        type: string
      memo:
        type: string
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      sequence:
        type: integer
      typ:
        type: integer
    required:
    - appId
    - name
    - path
    - typ
    type: object
  model.CreateRoleConfigReq:
    properties:
      appId:
        type: string
      isRoot:
        type: integer
      memo:
        type: string
      name:
        type: string
    required:
    - appId
    - name
    type: object
  model.FindActionConfigReq:
    properties:
      actionId:
        items:
          type: integer
        type: array
      appId:
        type: string
    required:
    - appId
    type: object
  model.FindActionConfigResp:
    properties:
      actions:
        items:
          $ref: '#/definitions/model.ActionBase'
        type: array
    type: object
  model.GetMenuActionsReq:
    properties:
      menuId:
        type: integer
    required:
    - menuId
    type: object
  model.GetMenuActionsResp:
    properties:
      actions:
        items:
          $ref: '#/definitions/model.Action'
        type: array
    type: object
  model.GetMenuTreeDirsReq:
    properties:
      appId:
        type: string
    required:
    - appId
    type: object
  model.GetMenuTreeDirsResp:
    properties:
      dirs:
        items:
          $ref: '#/definitions/model.MenuTreeDir'
        type: array
    type: object
  model.GetRoleMenuActionReq:
    properties:
      roleId:
        type: integer
    required:
    - roleId
    type: object
  model.GetRoleMenuActionResp:
    properties:
      menuActions:
        items:
          $ref: '#/definitions/model.MenuAction'
        type: array
    type: object
  model.ListAccount:
    properties:
      appId:
        type: string
      appName:
        type: string
      createdAt:
        type: integer
      loginLock:
        type: integer
      memo:
        type: string
      nickname:
        type: string
      pwdWrong:
        type: integer
      roles:
        items:
          type: string
        type: array
      status:
        type: integer
      tokenExpired:
        type: integer
    type: object
  model.ListAccountReq:
    properties:
      appId:
        type: string
      nickname:
        type: string
      page:
        type: integer
      size:
        type: integer
      status:
        type: integer
      username:
        type: string
    required:
    - page
    - size
    type: object
  model.ListActionConfig:
    properties:
      appId:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      path:
        type: string
      updatedAt:
        type: integer
    type: object
  model.ListActionConfigReq:
    properties:
      appId:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      page:
        type: integer
      path:
        type: string
      size:
        type: integer
    required:
    - page
    - size
    type: object
  model.ListAppConfig:
    properties:
      accessKey:
        description: 访问KEY
        type: string
      appId:
        type: string
      createdAt:
        type: integer
      id:
        type: integer
      memo:
        description: 备注
        type: string
      name:
        description: APP名
        type: string
      secretKey:
        description: 加密KEY
        type: string
      status:
        description: 状态 1-正常 2-限制
        type: integer
      updatedAt:
        type: integer
    type: object
  model.ListAppConfigReq:
    properties:
      name:
        type: string
      page:
        type: integer
      size:
        type: integer
      status:
        type: integer
    required:
    - page
    - size
    type: object
  model.ListRoleConfig:
    properties:
      appId:
        type: string
      appName:
        type: string
      id:
        type: integer
      isRoot:
        type: integer
      memo:
        type: string
      name:
        type: string
      updatedAt:
        type: integer
    type: object
  model.ListRoleConfigReq:
    properties:
      appId:
        type: string
      name:
        type: string
      page:
        type: integer
      size:
        type: integer
    required:
    - page
    - size
    type: object
  model.LoginAccountReq:
    properties:
      appId:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - appId
    - password
    - username
    type: object
  model.LoginAccountResp:
    properties:
      token:
        type: string
      tokenExpired:
        type: integer
    type: object
  model.LoginOutAccountReq:
    type: object
  model.MenuAction:
    properties:
      actions:
        items:
          type: integer
        type: array
      menuId:
        type: integer
    required:
    - menuId
    type: object
  model.MenuTreeDir:
    properties:
      actions:
        items:
          type: integer
        type: array
      appId:
        type: string
      children:
        $ref: '#/definitions/model.MenuTreeDirs'
      id:
        type: integer
      memo:
        type: string
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      sequence:
        type: integer
      status:
        type: integer
      typ:
        type: integer
    type: object
  model.MenuTreeDirs:
    items:
      $ref: '#/definitions/model.MenuTreeDir'
    type: array
  model.SelectAppConfig:
    properties:
      appId:
        type: string
      id:
        type: integer
      memo:
        description: 备注
        type: string
      name:
        description: APP名
        type: string
    type: object
  model.SelectAppConfigReq:
    properties:
      name:
        type: string
      page:
        type: integer
      size:
        type: integer
    required:
    - page
    - size
    type: object
  model.UpdateAccountPasswordReq:
    properties:
      id:
        type: integer
      pwd:
        type: string
    required:
    - id
    - pwd
    type: object
  model.UpdateAccountRoleReq:
    properties:
      id:
        type: integer
      roles:
        items:
          type: integer
        type: array
    required:
    - id
    - roles
    type: object
  model.UpdateAppConfigReq:
    properties:
      id:
        type: integer
      memo:
        type: string
      name:
        type: string
      secretKey:
        description: true = 重置加密KEY
        type: boolean
      status:
        description: 状态 1-正常 2-限制
        type: integer
    required:
    - id
    type: object
  model.UpdateMenuConfigActionReq:
    properties:
      actionId:
        items:
          type: integer
        type: array
      menuId:
        type: integer
    required:
    - menuId
    type: object
  model.UpdateMenuConfigReq:
    properties:
      id:
        type: integer
      memo:
        type: string
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      sequence:
        type: integer
      typ:
        type: integer
    required:
    - id
    type: object
  model.UpdateRoleConfigReq:
    properties:
      id:
        type: integer
      isRoot:
        type: integer
      memo:
        type: string
      name:
        type: string
      status:
        type: integer
    required:
    - id
    type: object
  model.UpsertActionConfigReq:
    properties:
      appId:
        type: string
      method:
        description: GET POST PUT DELETE
        type: string
      name:
        type: string
      path:
        type: string
    required:
    - appId
    - method
    - name
    - path
    type: object
  model.UpsertRoleMenuActionReq:
    properties:
      menuActions:
        items:
          $ref: '#/definitions/model.MenuAction'
        type: array
      roleId:
        type: integer
    required:
    - roleId
    type: object
host: API_HOST:49000
info:
  contact: {}
  description: admin rbac manage API
  title: admin rbac
  version: 1.0.0
paths:
  /rbac/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.LoginAccountReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.LoginAccountResp'
      summary: '[RBAC 登录]'
      tags:
      - RBAC 登录/登出
  /rbac/loginOut:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.LoginOutAccountReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[RBAC 登出]'
      tags:
      - RBAC 登录/登出
  /rbac/v1/account/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.CreateAccountReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[账户配置创建]'
      tags:
      - RBAC 账户配置
  /rbac/v1/account/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.ListAccountReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.ListAccount'
      security:
      - ApiKeyAuth: []
      summary: '[账户配置列表]'
      tags:
      - RBAC 账户配置
  /rbac/v1/account/pwd/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAccountPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[账户配置密码更改]'
      tags:
      - RBAC 账户配置
  /rbac/v1/account/role/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAccountRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[账户配置角色更改]'
      tags:
      - RBAC 账户配置
  /rbac/v1/action/find:
    post:
      consumes:
      - application/json
      description: 根据功能ID，查询基础信息
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.FindActionConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.FindActionConfigResp'
      security:
      - ApiKeyAuth: []
      summary: '[功能配置查询]'
      tags:
      - RBAC 功能配置
  /rbac/v1/action/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.ListActionConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.ListActionConfig'
      security:
      - ApiKeyAuth: []
      summary: '[功能配置列表]'
      tags:
      - RBAC 功能配置
  /rbac/v1/action/upsert:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UpsertActionConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[功能配置创建/更新]'
      tags:
      - RBAC 功能配置
  /rbac/v1/app/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.CreateAppConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[APP配置创建]'
      tags:
      - RBAC APP配置
  /rbac/v1/app/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.ListAppConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.ListAppConfig'
      security:
      - ApiKeyAuth: []
      summary: '[APP配置列表]'
      tags:
      - RBAC APP配置
  /rbac/v1/app/select:
    get:
      consumes:
      - application/json
      description: 用于Select组件
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.SelectAppConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.SelectAppConfig'
      summary: '[APP配置筛选列表]'
      tags:
      - RBAC APP配置
  /rbac/v1/app/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAppConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[APP配置更新]'
      tags:
      - RBAC APP配置
  /rbac/v1/menu/action/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateMenuConfigActionReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[菜单配置功能更新]'
      tags:
      - RBAC 菜单配置
  /rbac/v1/menu/actions:
    get:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.GetMenuActionsReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.GetMenuActionsResp'
      security:
      - ApiKeyAuth: []
      summary: '[菜单配置功能]'
      tags:
      - RBAC 菜单配置
  /rbac/v1/menu/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.CreateMenuConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[菜单配置创建]'
      tags:
      - RBAC 菜单配置
  /rbac/v1/menu/tree:
    get:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.GetMenuTreeDirsReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.GetMenuTreeDirsResp'
      security:
      - ApiKeyAuth: []
      summary: '[菜单配置树]'
      tags:
      - RBAC 菜单配置
  /rbac/v1/menu/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateMenuConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[菜单配置更新]'
      tags:
      - RBAC 菜单配置
  /rbac/v1/role/action:
    get:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.GetRoleMenuActionReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.GetRoleMenuActionResp'
      security:
      - ApiKeyAuth: []
      summary: '[获取角色菜单功能]'
      tags:
      - RBAC 角色配置
  /rbac/v1/role/action/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UpsertRoleMenuActionReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[角色配置功能绑定]'
      tags:
      - RBAC 角色配置
  /rbac/v1/role/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.CreateRoleConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[角色配置创建]'
      tags:
      - RBAC 角色配置
  /rbac/v1/role/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.ListRoleConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.ListRoleConfig'
      security:
      - ApiKeyAuth: []
      summary: '[角色配置列表]'
      tags:
      - RBAC 角色配置
  /rbac/v1/role/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: request param
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateRoleConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/ginutil.BaseResp'
      security:
      - ApiKeyAuth: []
      summary: '[角色配置更新]'
      tags:
      - RBAC 角色配置
swagger: "2.0"
